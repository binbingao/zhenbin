<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:p="http://www.springframework.org/schema/p"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

 xmlns:util="http://www.springframework.org/schema/util"
 xmlns:context="http://www.springframework.org/schema/context"
 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd"
		default-init-method="turnOnLights" default-destroy-method="turnOfLights"
		default-autowire="byType">
		
		<!-- http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd 
		 xmlns:aop="http://www.springframework.org/schema/aop"-->
<!-- <context:annotation-config/> -->
<context:component-scan base-package="com.springinaction.springidol">
<context:include-filter type="assignable" expression="com.springinaction.springidol.Instrument"/>
<context:exclude-filter type="annotation" expression="com.springinaction.springidol.SkipIt"/>
</context:component-scan>

	<bean id="duke" class="com.springinaction.springidol.Juggler">
		<constructor-arg value="15" />
	</bean>
	<bean id="sonnet29" class="com.springinaction.springidol.Sonnet29">
	</bean>
	<bean id="poeticDuke" class="com.springinaction.springidol.PoeticJuggler" autowire="constructor">
		<constructor-arg value="15"/>
		 <!--<constructor-arg >
			<bean class="com.springinaction.springidol.Sonnet29"/>
		</constructor-arg> -->
	</bean>
	<bean id="theStage" class="com.springinaction.springidol.Stage" factory-method="getInstance"/>
	<bean id="auditorium" class="com.springinaction.springidol.Auditorium" />
	<bean id="instrument" class="com.springinaction.springidol.Saxophone" autowire-candidate="false"/>
	<bean id="pinao" class="com.springinaction.springidol.Piano"/>
	<!--  <bean id="kenny" class="com.springinaction.springidol.Instrumentalist"> 
		<property name="song" value="Jingle Bells"/>
	  	<property name="instrument">
	  		<bean class="com.springinaction.springidol.Piano"/>
	  	</property>
	</bean>    -->
	<bean id="kenny" class="com.springinaction.springidol.Instrumentalist" autowire="byType" 
			p:song = "Jingle Bells"/>
	<bean id="hank" class="com.springinaction.springidol.OneManBand">
		<!--  <property name="instruments">-->
			
			<!--  <map>
				<entry key="GUITAR" value-ref="pinao"/>
				<entry key="CYMBAL" value-ref="saxophone"/>
			</map>-->
			<!--  <props>
				<prop key="GUITRA">STRUM STRUM STRUM</prop>
				<prop key="CYMBAL">CRASH CRASH CRASH</prop>
				<prop key="HARMONICA">HUM HUM HUM</prop>
			</props>
		</property>-->
		<!--  <property name="instruments" value="#{saxophone}"/>-->
	</bean>
	<bean id="songSelector" class="com.springinaction.springidol.SongSelector"/>
	<bean id="carl" class="com.springinaction.springidol.Instrumentalist">
		<!--  <property name="song" value="#{kenny.song}"/>-->
		<property name="song" value="#{songSelector.selectSong()?.toUpperCase()}"/>
		<!--  <property name="instrument" ref="saxophone"/>-->
	</bean>
	<!-- <bean id="audience" class="com.springinaction.springidol.Audience"/> -->
	<!-- <aop:config>
		<aop:aspect ref="audience">
			<aop:before pointcut="execution(* com.springinaction.springidol.Performer.perform(..))"
			method="takeSeats"/>
			
			<aop:before pointcut="execution(* com.springinaction.springidol.Performer.perform(..))"
			method="turnOffCellPhones"/>
			
			<aop:after-returning pointcut="execution(* com.springinaction.springidol.Performer.perform(..))"
			method="applaud"/>
			
			<aop:after-throwing pointcut="execution(* com.springinaction.springidol.Performer.perform(..))"
			method="demandRefund"/>
		</aop:aspect>
	</aop:config> -->
	<!-- <aop:config>
		<aop:aspect ref="audience">
			<aop:pointcut expression="execution(* com.springinaction.springidol.Performer.perform(..))" id="performance"/>
			<aop:before pointcut-ref="performance"
			method="takeSeats"/>
			
			<aop:before pointcut-ref="performance"
			method="turnOffCellPhones"/>
			
			<aop:after-returning pointcut-ref="performance"
			method="applaud"/>
			
			<aop:after-throwing pointcut-ref="performance"
			method="demandRefund"/>
		</aop:aspect>
	</aop:config> -->
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
		<property name="url" value="jdbc:hsqldb:hsql://172.16.53.200:3306/ufenqi_db"/>
		<property name="username" value="root"/>
		<property name="password" value="Ufenqi@123"/>
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg ref="dataSource"/>
	</bean>
	<bean id="spitterDao" class="com.springinaction.springidol.JdbcSpitterDAO">
		<property name="dataSource" ref="dataSource"/>
	</bean>
</beans>